# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types production_methods
{
	### MODIFIED - autoexpand
	type building_auto_expand = widget {
		visible = "[IsPotential( Building.ToggleAutoExpand )]"
		size = { 32 32 }
		
		icon = {
			using = rotate_glow_blue
			size = { 130% 130% }
			visible = "[Building.IsAutoExpanding]"
			alwaystransparent = yes
			parentanchor = center
			using = default_fade_in_out
		}
		
		button_icon_round_action = {
			size = { 100% 100% }
			visible = "[Building.IsAutoExpanding]"
			enabled = "[IsValid( Building.ToggleAutoExpand )]"
			onclick = "[Execute( Building.ToggleAutoExpand )]" 
			tooltip = [Building.GetAutoExpandTooltip]
			using = icon_toggle_single_off_sound
			
			blockoverride "icon" {
				texture = "gfx/interface/production_methods/auto_expand.dds"
			}
			blockoverride "icon_size" {
							size = { 77% 77% }
			}	
		}

		button_icon_round_action = {
			size = { 100% 100% }
			visible = "[Not(Building.IsAutoExpanding)]"
			enabled = "[IsValid( Building.ToggleAutoExpand )]"
			onclick = "[Execute( Building.ToggleAutoExpand )]" 
			tooltip = [Building.GetAutoExpandTooltip]
			using = icon_toggle_single_on_sound
			
			blockoverride "icon" {
				texture = "gfx/interface/production_methods/auto_expand_not.dds"
			}
			blockoverride "icon_size" {
							size = { 77% 77% }
			}
		}
	}
	
	### MODIFIED - has new PM icon_Exclamation mark_
	type has_new_pm_icon = icon {
		size = { 16 16 }
		framesize = { 36 36 }
		texture = "gfx/interface/current_situations/icon_situation_unread.dds"
		block "visible" {}
		tooltip = "TOOLTIP_NEW_PRODUCTION_METHOD"
	}

	### MODIFIED - PM ITEM
	type buildings_production_method_item = flowcontainer {
		block "visible" {
			visible = "[Not(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetBuildings))]"
		}

		block "datacontext" {
			datacontext = "[BuildingBrowserBuildingTypeItem.GetBuildingType]"
		}

		direction = vertical
		spacing = 4

		### MODIFIED - TOP ITEM
		widget = {
			size = { @panel_width_plus_14 76 }

			highlight_tutorial = {
	   			visible = "[BuildingType.IsBeingTutorialHighlighted]"
	    	}

			### DROPDOWN / EXPAND
			section_header_button = {
				blockoverride "layout" {
					position = { 0 0 }
					size = { @panel_width_plus_14 32 }
				}

				blockoverride "left_text" {
					raw_text = "#v [BuildingType.GetNameNoFormatting]#!"
				}
				blockoverride "right_text" {
					section_header_right_text = {
						visible = "[And( And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), GreaterThan_int32( BuildingType.GetLevelCountInCountry(GetPlayer.Self), '(int32)0' ))]"
						text = "[BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
						tooltip = "PRODUCTIVITY_SPAN_TOOLTIP"
					}
				}

				blockoverride "onclick" {
					onclick = "[BuildingBrowserPanel.ToggleExpandBuildingType(BuildingBrowserBuildingTypeItem.GetBuildingType)]"
				}

				blockoverride "onclick_showmore" {
					visible = "[Not(BuildingBrowserPanel.IsBuildingTypeExpanded(BuildingBrowserBuildingTypeItem.GetBuildingType))]"
				}

				blockoverride "onclick_showless" {
					visible = "[BuildingBrowserPanel.IsBuildingTypeExpanded(BuildingBrowserBuildingTypeItem.GetBuildingType)]"
				}
			}

			### MODIFIED - production methods grouped
			container = {
				position = { 56 36 }
				parentanchor = top

				fixedgridbox = {
					datamodel = "[BuildingBrowserBuildingTypeItem.GetBuildingType.AccessProductionMethodGroups]"
					flipdirection = yes
					addcolumn = 40
					addrow = 50

					item = {
						widget = {
							size = { 36 36 }
							tooltip = "BUILDING_TYPE_BULK_CHANGE_TOOLTIP"
							using = tooltip_above

							button = {
								visible = "[NotEqualTo_int32( GetDataModelSize( ProductionMethodGroup.AccessCountryProductionMethods( GetPlayer.Self ) ), '(int32)1' )]"
								distribute_visual_state = no
								inherit_visual_state = no
								using = expand_button_bg_dropdown
								size = { 100% 100% }
								onclick = "[BuildingBrowserBuildingTypeItem.ToggleSwitchProductionMethodMenu( ProductionMethodGroup.AccessSelf, PdxGuiWidget.AccessSelf)]"
								enabled = "[Not(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetOwnBuildings))]"
							}

							### pm icon
							icon = {
								visible = "[BuildingBrowserBuildingTypeItem.HasAllSameProductionMethod( ProductionMethodGroup.Self )]"
								size = { 28 28 }
								parentanchor = center
								texture = "[BuildingBrowserBuildingTypeItem.GetAllSameProductionMethodTexture( ProductionMethodGroup.Self )]"
							}

							### mixed pm icon
							icon = {
								visible = "[Not( BuildingBrowserBuildingTypeItem.HasAllSameProductionMethod( ProductionMethodGroup.Self ) )]"
								size = { 28 28 }
								parentanchor = center
								texture = "[ProductionMethodGroup.GetMixedIcon]"
							}

							### new pm
							has_new_pm_icon = {
								position = { -2 2 }
								parentanchor = bottom|left
								blockoverride "visible" {
									visible = "[And(GetPlayer.HasNewProductionMethodInGroup( ProductionMethodGroup.Self ), Not(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetOwnBuildings)))]"
								}
							}


							### nr available
							textbox = {
								raw_text = "#bold [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingBrowserBuildingTypeItem.GetBuildingType.AccessSelf)]#!"
								parentanchor = right
								position = { 0 0 }
								autoresize = yes
								align = right|nobaseline
								visible = "[GreaterThan_int32( ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingBrowserBuildingTypeItem.GetBuildingType.AccessSelf), '(int32)1')]"
								tooltip = "PRODUCTION_METHOD_OPTIONS_BULK"
								using = tooltip_above
								using = fontsize_small

								background = {
									using = default_background
									margin = { 4 4 }
								}
							}
						}
					}
				}
			}

			### MODIFIED - building icon
			# button = {
			# 	texture = "[BuildingType.GetTexture]"
			# 	onrightclick = "[RightClickMenuManager.ShowForBuildingType(BuildingType.AccessSelf)]"
			# 	effectname = "NoHighlight"
			# 	distribute_visual_state = no
			# 	inherit_visual_state = no

			# 	size = { 100 100 }
			# 	position = { 7 0 }
			# 	parentanchor = vcenter

			# 	tooltipwidget = {
			# 		FancyTooltip_BuildingType = {}
			# 	}
			# }

			### MODIFIED = ACTION BUTTONS
			flowcontainer = {
				parentanchor = top|right
				position = { -16 36 }
				spacing = 4

				### expand
				button_icon_round_map_interaction = {
					size = { 32 32 }
					blockoverride "icon" {
						texture = "gfx/interface/buttons/button_icons/plus.dds"
					}

					onclick = "[BuildingType.ActivateExpansionLens]"
					using = select_button_sound
					visible = "[And(Or( BuildingType.IsBuildable, BuildingType.IsExpandable ), Not(BuildingType.IsMilitaryBuilding))]"
					tooltip = "EXPAND"
				}

				### privatize
				building_privatize_bulk_toggle = {
					size = { 32 32 }
				}

				### subsidize
				widget = {
					size = { 32 32 }
					visible = "[BuildingType.CanBeSubsidized]"

					icon = {
						using = rotate_glow_blue
						size = { 130% 130% }
						visible = "[BuildingBrowserBuildingTypeItem.HasAllSubsidies]"
						alwaystransparent = yes
						parentanchor = center
						using = default_fade_in_out
					}

					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasAllSubsidies]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						tooltip = "SUBSIDIZED_ALL_YES"
						using = icon_toggle_all_off_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasAllNoSubsidies]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						tooltip = "SUBSIDIZED_ALL_NO"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized_not.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}


					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasMixedSubsidies]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllSubsidies )]"
						tooltip = "SUBSIDIZED_ALL_MIXED"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized_mixed.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
				}

				### auto expand
				widget = {
					size = { 32 32 }
					visible = "[BuildingType.CanBeAutoExpanded]"

					icon = {
						using = rotate_glow_blue
						size = { 130% 130% }
						visible = "[And(BuildingBrowserBuildingTypeItem.HasAllAutoExpand, BuildingBrowserBuildingTypeItem.GetBuildingType.CanBeAutoExpanded)]"
						alwaystransparent = yes
						parentanchor = center
						using = default_fade_in_out
					}

					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[And(BuildingBrowserBuildingTypeItem.HasAllAutoExpand, BuildingBrowserBuildingTypeItem.GetBuildingType.CanBeAutoExpanded)]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						tooltip = "AUTO_EXPAND_ALL_YES"
						using = icon_toggle_all_off_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/auto_expand.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[And(BuildingBrowserBuildingTypeItem.HasAllNoAutoExpand, BuildingBrowserBuildingTypeItem.GetBuildingType.CanBeAutoExpanded)]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						tooltip = "AUTO_EXPAND_ALL_NO"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/auto_expand_not.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
					button_icon_round_action = {
						size = { 100% 100% }
						visible = "[BuildingBrowserBuildingTypeItem.HasMixedAutoExpand]"
						enabled = "[IsValid( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						onclick = "[Execute( BuildingBrowserBuildingTypeItem.ToggleAllAutoExpand )]"
						tooltip = "AUTO_EXPAND_ALL_MIXED"
						using = icon_toggle_all_on_sound

						blockoverride "icon" {
							texture = "gfx/interface/production_methods/subsidized_mixed.dds"
						}
						blockoverride "icon_size" {
							size = { 70% 70% }
						}
					}
				}
			}

			### PRODUCTIVITY SPAN ###
			textbox = {
				text = "BUILDING_TYPE_COUNT"
				autoresize = yes
				position = { 11 -3 }
				parentanchor = bottom
				align = hcenter|nobaseline
				using = fontsize_large
				minimumsize = { 26 26 }
			}
		}

		### EXPANDED LIST OF BUILDINGS
		expanded_list = {
			using = expanded_list_bg
			blockoverride "dark_area_alpha" {
				alpha = 0.5
			}

			datamodel = "[BuildingBrowserBuildingTypeItem.GetBuildings]"
			visible = "[BuildingBrowserPanel.IsBuildingTypeExpanded(BuildingBrowserBuildingTypeItem.GetBuildingType)]"

			item = {
				condensed_building_information = {
					background = {
						using = entry_bg_simple
					}
					background = {
						using = entry_bg_simple
					}

					blockoverride "extra_items_in_production_methods_list" {
						military_building_combat_unit_summary = {
							parentanchor = right|vcenter

							blockoverride "icon_size" {
								size = { 50 50 }
							}

							blockoverride "overlappingitembox_size" {
								size = { 190 50 }
							}

							blockoverride "unit_number_margins" {
								margin = { 6 3 }
							}
						}
					}
				}
			}
		}
	}
}
